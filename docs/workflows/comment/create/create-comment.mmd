sequenceDiagram
    participant User as Authenticated User
    participant Frontend as Angular App
    participant Backend as Node/Express
    participant Validation as comment.validation
    participant MongoDB
    participant SocketIO

    %% User fills comment form
    User->>Frontend: Fill comment form (content)
    Frontend->>Backend: POST /articles/:id/comments + JWT

    %% Step 1: Decode JWT & verify user exists
    Backend->>Backend: Decode JWT, get userId
    alt User not found
        Backend-->>Frontend: 401 Unauthorized ("User not found")
        Frontend-->>User: Show error
    else User exists
        %% Step 2: Validate input
        Backend->>Validation: Validate comment content
        Validation-->>Backend: Return valid or errors
        alt Validation fails
            Backend-->>Frontend: 400 Bad Request (validation errors)
            Frontend-->>User: Show error
        else Validation passes
            %% Step 3: Save comment
            Backend->>MongoDB: Insert new comment with articleId & userId
            MongoDB-->>Backend: Comment saved
            %% Step 4: Update Article.commentIds
            Backend->>MongoDB: Push commentId to Article.commentIds
            MongoDB-->>Backend: Updated article
            %% Step 5: Real-time notification to article author
            Backend->>SocketIO: Emit newComment event
            SocketIO-->>Frontend: Notify article author
            Backend-->>Frontend: 201 Created + comment data
            Frontend-->>User: Show success confirmation
        end
    end
